include "/etc/ldapd_before.conf"

listen on "/var/run/ldapi"
listen on "/var/www/run/ldapi"
listen on lo0 secure

schema "/etc/ldap/core.schema"
schema "/etc/ldap/inetorgperson.schema"
schema "/etc/ldap/nis.schema"
schema "/etc/ldap/ldap_extras.schema"

{% for domain in ldap_domains %}
namespace "dc={{ domain.name }},dc={{ domain.tld }}" {
  rootdn "cn={{ domain.admin | default(ldap_admin) }},dc={{ domain.name }},dc={{ domain.tld }}"
  rootpw "{CRYPT}{{ lookup('pipe', 'encrypt -b a ' + ( domain.passwd | default(ldap_rootpw) ) |quote ) }}"

  {% for i in ldap_indexes %}
  index {{ i }}
  {% endfor %}

  deny
  allow read access to subtree "{{ domain.name }}"
  allow bind access to children of "ou=users,{{ domain.name }}"
  allow write access to any attribute sshPublicKey by self
  deny to any attribute userPassword
  allow read access to any attribute userPassword by self
  allow write access to any attribute userPassword by self

  # TODO: need a way for user's to change their own password, but there's nothing
  # stopping them from writing a plain text password into their entry.
  #
  # Solution is probably a service user with write access to all userPassword
  # entries which writes a new {CRYPT} string after verifying a bind with the
  # user's old password.

  {% for user in (domain.admin_users | default([])) %}
  allow to any by "uid={{ user }},ou=users,{{ domain.name }}"
  {% endfor %}
}

{% endfor %}

include "/etc/ldapd_after.conf"
